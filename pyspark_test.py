import pyspark
from pyspark.sql.functions import *
from pyspark.sql import SparkSession
#Create SparkSession
spark = SparkSession.builder.master("local[1]").appName("Extraction_rib").getOrCreate()
df = spark.sql("select * from awb_rec.rib_compte")
df1 = df.withColumn('agence' , substring('rib', 9, 4)).withColumn('serie',substring('rib', 14, 9)).withColumn('A', substring('rib', 7, 2))
df2 = df1.withColumn('O', substring('agence', 1, 1)).withColumn('Q', substring('agence', 2, 11)).withColumn('P', substring('serie',1,3)).withColumn('U', substring('serie',4,9))
df3 = df2.withColumn('V', concat(df2.O , df2.P)).withColumn('J' , lit(13)).withColumn('K' , lit(16))
df4 = df3.withColumn('W' , when(col('V') == '0000' , 11).otherwise(15)).withColumn('X' , when(col('A') == '00' , 'MAD').otherwise('DEV'))
df5 = df4.withColumn('Y' , when(col('X') == 'MAD' , col('A')).otherwise(col('Q'))).withColumn('Z' , when(col('X') == 'MAD' , col('Q')).otherwise(col('A')))
df6 = df5.withColumn('AC',concat(df5.Y , df5.Z , df5.U , df5.V))
df7 = df6.withColumn('AD' , substring('AC', 1, 1).cast('int') * (col('J')-1))
df8 = df7.withColumn('AE' , substring('AC', 2, 1).cast('int') * (col('J')-2) + col('AD'))
df9 = df8.withColumn('AF' , substring('AC', 3, 1).cast('int') * (col('J')-3) + col('AE'))
df10 = df9.withColumn('AG' , substring('AC', 4, 1).cast('int') * (col('J')-4) + col('AF'))
df11 = df10.withColumn('AH' , substring('AC', 5, 1).cast('int') * (col('J')-5) + col('AG'))
df12 = df11.withColumn('AI' , substring('AC', 6, 1).cast('int') * (col('J')-6) + col('AH'))
df13 = df12.withColumn('AJ' , substring('AC', 7, 1).cast('int') * (col('J')-7) + col('AI'))
df14 = df13.withColumn('AK' , substring('AC', 8, 1).cast('int') * (col('J')-8) + col('AJ'))
df15 = df14.withColumn('AL' , substring('AC', 9, 1).cast('int') * (col('J')-9) + col('AK'))
df16 = df15.withColumn('AM' , substring('AC', 10, 1).cast('int') * (col('J')-10) + col('AL'))
df17 = df16.withColumn('AN' , substring('AC', 11, 1).cast('int') * (col('J')-11) + col('AM'))
df18 = df17.withColumn('AO' , when(col('W') == 11 , col('AN')).otherwise(substring('AC', 12, 1).cast('int') * (col('J')-12) + col('AN')))
df19 = df18.withColumn('AP' , when(col('W') == 11 , col('AO')).otherwise(substring('AC', 13, 1).cast('int') * (col('J')-13) + col('AO')))
df20 = df19.withColumn('AQ' , when(col('W') == 11 , col('AP')).otherwise(substring('AC', 14, 1).cast('int') * (col('J')-14) + col('AP')))
df21 = df20.withColumn('AR' , when(col('W') == 11 , col('AQ')).otherwise(substring('AC', 15, 1).cast('int') * (col('J')-15) + col('AQ')))
df22 = df21.withColumn('AT', col('AR')%11)
df23 = df22.withColumn('cle',
when(col('AT') == 10 ,'A')
.when(col('AT') == 9 ,'B')
.when(col('AT') == 8 ,'C')
.when(col('AT') == 7 ,'D')
.when(col('AT') == 6 ,'E')
.when(col('AT') == 5 ,'V')
.when(col('AT') == 4 ,'N')
.when(col('AT') == 3 ,'H')
.when(col('AT') == 2 ,'R')
.when(col('AT') == 1 ,'X')
.when(col('AT') == 0 ,'S')
.otherwise('_')
)
columns_to_drop = ['agence', 'serie', 'A', 'O', 'Q', 'P', 'U', 'V', 'J', 'K', 'W', 'X', 'Y', 'Z', 'AC', 'AD', 'AE', 'AF', 'AG', 'AH','AI','AJ','AK', 'AL', 'AM', 'AN','AO', 'AP','AQ', 'AR', 'AT']
df24 = df23.drop(*columns_to_drop)
df24.show()

